{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport userAPI from '../../mocks/user';\nconst storedUserInfo = localStorage.getItem(\"userInfo\");\nconst initialState = {\n  userDetails: storedUserInfo ? JSON.parse(storedUserInfo) : null,\n  loading: false,\n  error: null\n};\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    loginStart(state) {\n      state.loading = true;\n      state.error = null;\n    },\n    loginSuccess(state, action) {\n      state.userDetails = action.payload;\n      state.loading = false;\n      state.error = null;\n      localStorage.setItem(\"userInfo\", JSON.stringify(action.payload));\n    },\n    loginFailure(state, action) {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    getUserDetailsStart(state) {\n      state.loading = true;\n      state.error = null;\n    },\n    getUserDetailsSuccess(state, action) {\n      state.userDetails = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    getUserDetailsFailure(state, action) {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    createUserStart(state) {\n      state.loading = true;\n      state.error = null;\n    },\n    createUserSuccess(state, action) {\n      state.userDetails = {\n        ...action.payload\n      };\n      state.loading = false;\n      state.error = null;\n      localStorage.setItem(\"userInfo\", JSON.stringify(action.payload));\n    },\n    createUserFailure(state, action) {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    updateUserStart(state) {\n      state.loading = true;\n      state.error = null;\n    },\n    updateUserSuccess(state, action) {\n      state.userDetails = {\n        ...state.userDetails,\n        ...action.payload\n      };\n      state.loading = false;\n      state.error = null;\n      localStorage.setItem(\"userInfo\", JSON.stringify(state.userDetails));\n    },\n    updateUserFailure(state, action) {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    deleteUserStart(state) {\n      state.loading = true;\n      state.error = null;\n    },\n    deleteUserSuccess(state) {\n      state.userDetails = {};\n      state.loading = false;\n      state.error = null;\n      localStorage.removeItem(\"userInfo\");\n    },\n    deleteUserFailure(state, action) {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    logoutSuccess(state) {\n      state.userDetails = {};\n      state.loading = false;\n      state.error = null;\n      localStorage.removeItem(\"userInfo\");\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  getUserDetailsStart,\n  getUserDetailsSuccess,\n  getUserDetailsFailure,\n  createUserStart,\n  createUserSuccess,\n  createUserFailure,\n  updateUserStart,\n  updateUserSuccess,\n  updateUserFailure,\n  deleteUserStart,\n  deleteUserSuccess,\n  deleteUserFailure,\n  logoutSuccess\n} = userSlice.actions;\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch(loginStart());\n    const user = await userAPI.login(email, password);\n    dispatch(loginSuccess(user));\n  } catch (error) {\n    dispatch(loginFailure(error.message));\n  }\n};\nexport const fetchUserDetails = userId => async dispatch => {\n  try {\n    dispatch(getUserDetailsStart());\n    const userDetails = await userAPI.getUserDetails();\n    dispatch(getUserDetailsSuccess(userDetails));\n  } catch (error) {\n    dispatch(getUserDetailsFailure(error.message));\n  }\n};\nexport const createUser = (name, email, password) => async dispatch => {\n  try {\n    dispatch(createUserStart());\n    const user = await userAPI.createUser(name, email, password);\n    dispatch(createUserSuccess(user));\n    dispatch(loginSuccess(user));\n  } catch (error) {\n    dispatch(createUserFailure(error.message));\n  }\n};\nexport const updateUser = (userId, updateData) => async dispatch => {\n  try {\n    dispatch(updateUserStart());\n    const updatedUser = await userAPI.updateUser(userId, updateData);\n    dispatch(updateUserSuccess(updatedUser));\n  } catch (error) {\n    dispatch(updateUserFailure(error.message));\n  }\n};\nexport const deleteUser = userId => async dispatch => {\n  try {\n    dispatch(deleteUserStart());\n    await userAPI.deleteUser(userId);\n    dispatch(deleteUserSuccess());\n  } catch (error) {\n    dispatch(deleteUserFailure(error.message));\n  }\n};\nexport const logout = () => dispatch => {\n  dispatch(userSlice.actions.logoutSuccess());\n};\nexport const {\n  reducer\n} = userSlice;\nexport default userSlice;","map":{"version":3,"names":["createSlice","userAPI","storedUserInfo","localStorage","getItem","initialState","userDetails","JSON","parse","loading","error","userSlice","name","reducers","loginStart","state","loginSuccess","action","payload","setItem","stringify","loginFailure","getUserDetailsStart","getUserDetailsSuccess","getUserDetailsFailure","createUserStart","createUserSuccess","createUserFailure","updateUserStart","updateUserSuccess","updateUserFailure","deleteUserStart","deleteUserSuccess","removeItem","deleteUserFailure","logoutSuccess","actions","login","email","password","dispatch","user","message","fetchUserDetails","userId","getUserDetails","createUser","updateUser","updateData","updatedUser","deleteUser","logout","reducer"],"sources":["C:/Users/anasm/OneDrive/Desktop/sarc assignment/full_stack/frontend/src/redux/slices/userSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport userAPI from '../../mocks/user';\r\n\r\nconst storedUserInfo = localStorage.getItem(\"userInfo\");\r\n\r\nconst initialState = {\r\n  userDetails: storedUserInfo ? JSON.parse(storedUserInfo) : null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    loginStart(state) {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    loginSuccess(state, action) {\r\n      state.userDetails = action.payload;\r\n      state.loading = false;\r\n      state.error = null;\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(action.payload));\r\n    },\r\n    loginFailure(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n    getUserDetailsStart(state) {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    getUserDetailsSuccess(state, action) {\r\n      state.userDetails = action.payload;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    getUserDetailsFailure(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n    createUserStart(state) {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    createUserSuccess(state, action) {\r\n      state.userDetails = { ...action.payload };\r\n      state.loading = false;\r\n      state.error = null;\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(action.payload));\r\n    },\r\n    createUserFailure(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n    updateUserStart(state) {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    updateUserSuccess(state, action) {\r\n      state.userDetails = { ...state.userDetails, ...action.payload };\r\n      state.loading = false;\r\n      state.error = null;\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(state.userDetails));\r\n    },\r\n    updateUserFailure(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n    deleteUserStart(state) {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    deleteUserSuccess(state) {\r\n      state.userDetails = {};\r\n      state.loading = false;\r\n      state.error = null;\r\n      localStorage.removeItem(\"userInfo\");\r\n\r\n    },\r\n    deleteUserFailure(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n    logoutSuccess(state) {\r\n      state.userDetails = {};\r\n      state.loading = false;\r\n      state.error = null;\r\n      localStorage.removeItem(\"userInfo\");\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  loginStart,\r\n  loginSuccess,\r\n  loginFailure,\r\n  getUserDetailsStart,\r\n  getUserDetailsSuccess,\r\n  getUserDetailsFailure,\r\n  createUserStart,\r\n  createUserSuccess,\r\n  createUserFailure,\r\n  updateUserStart,\r\n  updateUserSuccess,\r\n  updateUserFailure,\r\n  deleteUserStart,\r\n  deleteUserSuccess,\r\n  deleteUserFailure,\r\n  logoutSuccess,\r\n} = userSlice.actions;\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch(loginStart());\r\n    const user = await userAPI.login(email, password);\r\n    dispatch(loginSuccess(user));\r\n  } catch (error) {\r\n    dispatch(loginFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const fetchUserDetails = (userId) => async (dispatch) => {\r\n  try {\r\n    dispatch(getUserDetailsStart());\r\n    const userDetails = await userAPI.getUserDetails( );\r\n    dispatch(getUserDetailsSuccess(userDetails));\r\n  } catch (error) {\r\n    dispatch(getUserDetailsFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const createUser = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch(createUserStart());\r\n    const user = await userAPI.createUser(name, email, password);\r\n    dispatch(createUserSuccess(user));\r\n    dispatch(loginSuccess(user));  \r\n  } catch (error) {\r\n    dispatch(createUserFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const updateUser = (userId, updateData) => async (dispatch) => {\r\n  try {\r\n    dispatch(updateUserStart());\r\n    const updatedUser = await userAPI.updateUser(userId, updateData);\r\n    dispatch(updateUserSuccess(updatedUser));\r\n  } catch (error) {\r\n    dispatch(updateUserFailure(error.message));\r\n  }\r\n};\r\n\r\nexport const deleteUser = (userId) => async (dispatch) => {\r\n  try {\r\n    dispatch(deleteUserStart());\r\n    await userAPI.deleteUser(userId);\r\n    dispatch(deleteUserSuccess());\r\n  } catch (error) {\r\n    dispatch(deleteUserFailure(error.message));\r\n  } \r\n\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  dispatch(userSlice.actions.logoutSuccess());\r\n};\r\nexport const { reducer } = userSlice;\r\nexport default userSlice;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}